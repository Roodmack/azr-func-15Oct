# This workflow will deploy a PowerShell project to an Azure Functions App on Windows or Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-powershell
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy PowerShell project to Azure Function App

on: 
   push:
     branches: ["main"]
   workflow_dispatch:
   pull_request:
  #   branches : ["main"]
   

env:
  AZURE_FUNCTIONAPP_NAME_dev: 'func15Oct-dev'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_NAME_qa: 'func15Oct-qa'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_NAME_prod: 'func15Oct-prod'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root

jobs:
  build-and-deploy-Dev :
    runs-on: windows-latest # For Linux, use ubuntu-latest
    environment: dev
     # *********************************************Deploy to Dev ************************************************
    steps:
    - name: 'Checkout GitHub Action Dev'
      uses: actions/checkout@v4
      
    - name: 'get script running back'
      run: | 
        echo hello words
        git --version
        env

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    - name: 'Login via Azure CLI Dev'
      uses: Azure/login@v2.2.0
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository
     
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.1
      id: dev
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_dev }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        
  # *********************************************Deploy to QA************************************************#
  deploy-QA :
    runs-on: windows-latest # For Linux, use ubuntu-latest
    environment: dev
    needs: build-and-deploy-Dev
    #if: success() #if: ${{ always() }} # uncomment if you want to execute if first jobs failed
    
    steps:
    - name: 'Checkout GitHub Action QA'
      uses: actions/checkout@v4
      
            # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    - name: 'Login via Azure CLI QA'
      uses: Azure/login@v2.2.0
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS_QA_PROD }} # set up AZURE_RBAC_CREDENTIALS QA secrets in your repository
       # Deploy Func to QA 
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.1
      id: qa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_qa }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        

  # *********************************************Deploy to prod************************************************#
  deploy-prod :
    runs-on: windows-latest # For Linux, use ubuntu-latest
    needs: deploy-QA
    #if: success() # uncomment if you want to execute if first jobs failed
    environment: dev
    steps:
    - name: 'get log back'
      run: | 
        echo hello words
        git --version
        whoami
    # login  with prod creed
    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    - name: 'Login via Azure CLI Prod'
      uses: Azure/login@v2.2.0
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS_QA_PROD }} # set up AZURE_RBAC_CREDENTIALS secrets  for Prod in your repository
       # Deploy Func to prod  
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.1
      id: prod
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_prod }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        
